{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";0YACA,knGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBACzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IAiBF,QAd2B,CACnBC,YAAW,SAACC,GAAI,iHACNP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAD9B,EAEtB,EACME,eAAc,WAAG,iHACPT,EAAS,uCAAEU,OAAOX,IAAiB,0CAD5B,EAEvB,EACMY,YAAW,SAACC,GAAO,iHACTZ,EAAS,uCAAEa,IAAId,EAAmBa,IAAK,0CAD9B,EAEzB,EACME,eAAc,SAACP,GAAI,iHACTP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD9B,EAEzB,gDCfF,QALqB,CACnBQ,KAAM,GAAF,OAAKlB,EAAAA,EAAAA,SAAe,SACxBmB,OAAQ,SAACT,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,mBAAWU,EAAE,sPCHjD,45NAcA,QAbkB,yBADlB,4FACkB,SADlB,QAMG,EALe,EAWf,OAZH,EACkB,OADlB,EACkB,0CAChB,sGACyBU,MAAMC,EAAAA,MAAkB,OAAjC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,wFAED,WAA4Bf,GAAE,yFACLU,MAAMC,EAAAA,OAAoBX,IAAI,OAAvC,OAARY,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaE,YAAU,2CAC/B,+CAZH,6DAYG,EAXe,mCCKlB,QAPe,CACbC,SAAU,sCACVC,WAAY,YACZ7B,cAAe,mBACfE,iBAAkB,EAClBC,kBAAmB","sources":["webpack://restaurant-apps/./src/scripts/data/data-favorite.js","webpack://restaurant-apps/./src/scripts/globals/end-point.js","webpack://restaurant-apps/./src/scripts/data/data-restoran.js","webpack://restaurant-apps/./src/scripts/globals/config.js"],"sourcesContent":["import { openDB } from 'idb';\nimport config from '../globals/config';\n\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = config;\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n  },\n});\n\nconst FavoriteRestoranDB = {\n  async getRestoran(id) {\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\n  },\n  async getAllRestoran() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  },\n  async putRestoran(movie) {\n    return (await dbPromise).put(OBJECT_STORE_NAME, movie);\n  },\n  async deleteRestoran(id) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n  },\n};\nexport default FavoriteRestoranDB;\n","import config from './config';\n\nconst API_ENDPOINT = {\n  LIST: `${config.BASE_URL}/list`,\n  DETAIL: (id) => `${config.BASE_URL}/detail/${id}`,\n};\n\nexport default API_ENDPOINT;\n","import API_ENDPOINT from '../globals/end-point';\n\nclass DataRestoran {\n  static async listRestoran() {\n    const response = await fetch(API_ENDPOINT.LIST);\n    const responseJson = await response.json();\n    return responseJson.restaurants;\n  }\n\n  static async detailRestoran(id) {\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\n    const responseJson = await response.json();\n    return responseJson.restaurant;\n  }\n}\nexport default DataRestoran;\n","const config = {\n  BASE_URL: 'https://restaurant-api.dicoding.dev',\n  CACHE_NAME: 'RETA-MEAL',\n  DATABASE_NAME: 'katalog-restoran',\n  DATABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'restoran',\n};\nexport default config;\n"],"names":["i","DATABASE_NAME","config","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestoran","id","get","getAllRestoran","getAll","putRestoran","movie","put","deleteRestoran","LIST","DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","restaurant","BASE_URL","CACHE_NAME"],"sourceRoot":""}